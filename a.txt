npx @tailwindcss/cli -i ./opt/css/home.css -o ./docs/home.css --minify

background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8

  <style>
      html.dark .shiki,
      html.dark .shiki span {
        color: var(--shiki-dark) !important;
        background-color: var(--shiki-dark-bg) !important;
        /* Optional, if you also want font styles */
        font-style: var(--shiki-dark-font-style) !important;
        font-weight: var(--shiki-dark-font-weight) !important;
        text-decoration: var(--shiki-dark-text-decoration) !important;
      }
    </style>


    (function () {
  function calculateSettingAsThemeString({
    localStorageTheme,
    systemSettingDark,
  }) {
    if (localStorageTheme !== null) {
      return localStorageTheme;
    }

    if (systemSettingDark.matches) {
      return "dark";
    }

    return "light";
  }
  const themeBtn = document.getElementById("themebtn");
  const localStorageTheme = localStorage.getItem("theme");
  const systemSettingDark = window.matchMedia("(prefers-color-scheme: dark)");

  let currentThemeSetting = calculateSettingAsThemeString({
    localStorageTheme,
    systemSettingDark,
  });

  document.querySelector("html").classList.add(currentThemeSetting);

  themeBtn.addEventListener("click", () => {
    const newTheme = currentThemeSetting === "dark" ? "light" : "dark";
    //document.querySelector("html").setAttribute("data-theme", newTheme);
    document.querySelector("html").classList.add(newTheme);
    localStorage.setItem("theme", newTheme);
    currentThemeSetting = newTheme;
  });
})();
